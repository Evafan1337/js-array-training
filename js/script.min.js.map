{"version":3,"names":[],"mappings":"","sources":["script.js"],"sourcesContent":["const students = [\n  {\n    id:1,\n    name: `Саша`,\n    rating:8,\n    processed: false\n  },\n  {\n    id:2,\n    name: `Миша`,\n    rating:5,\n    processed: false\n  },\n  {\n    id:3,\n    name: `Сережа`,\n    rating:7,\n    processed: false\n  }\n]\n\nconst processingForEach = (elem) => {\n  console.log(`processingFunction`);\n  elem.processed = !elem.processed;\n  elem.rating = elem.rating + 1;\n  console.log(elem);\n}\n\nconsole.log('Метод forEach()');\nstudents.forEach(element => processingForEach(element));\n\nconst funcFilter = (elem) => {\n  if (elem.rating > 7){\n    return true;\n  } else {\n    return false;\n  }\n}\n\nconsole.log('Метод filter()');\nlet stFilter = students.filter(item => funcFilter(item));\nconsole.log(stFilter);\n\nconst funcMap = (elem) => {\n  delete elem.processed;\n  if (elem.rating > 7){\n    elem.status = `Отличник`\n  } else {\n    elem.status = `Ударник`\n  }\n  return elem;\n}\nconsole.log('Метод map()');\nlet studentsMap = students.map(item => funcMap(item));\nconsole.log(studentsMap);\n\nconsole.log('Метод every()');\nlet stEvery = students.every(item => funcFilter(item));\nconsole.log(stEvery);\n\nconsole.log('Метод some()');\nlet stSome = students.some(item => funcFilter(item));\nconsole.log(stSome);\n\n\nconst filmList = [\n  {\n    id: 1,\n    name: `Наруто`,\n    genre: [`Драма`, `Аниме`, `Боевик`],\n  },\n  {\n    id: 2,\n    name: `Жизнь Енота`,\n    genre: [`Документальный`, `Анималистика`],\n  },\n  {\n    id: 3,\n    name: `Мемуары Валерия Жмышенко`,\n    genre: [`Биография`, `Драма`],\n  },\n  {\n    id: 4,\n    name: `Крестный отец`,\n    genre: [`Драма`, `Боевик`]\n  }\n]\nconsole.log('Выкладки по reduce()');\nconsole.log(filmList);\nlet ratingSum = students.reduce((acc, item) => {\n  return acc + item.rating;\n},0);\nconsole.log(ratingSum);\nconsole.log(`-----`);\n\nlet ratingAverage = students.reduce((acc, item, index, array) =>{\n  acc += item.rating;\n  if (index === array.length-1){\n    return acc/array.length;\n  } else {\n    return acc;\n  }\n},0);\nconsole.log(ratingAverage);\nconsole.log(`-----`);\nlet genreCount = filmList.reduce((acc, item) => {\n  item.genre.forEach(elem =>{\n    if(!acc[elem]){\n      acc[elem] = 1;\n    } else {\n      acc[elem] = acc[elem] + 1;\n    }\n  })\n  return acc;\n}, []);\n\nconsole.log(genreCount);\n\n\n"],"file":"script.min.js"}